spring.application.name=inventory-service

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/trackops_inventory
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=2000ms
spring.redis.database=1

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventory-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Health Check Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.redis.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=100MB
management.info.env.enabled=true
management.info.java.enabled=true
management.info.build.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=inventory-service
management.metricsw.tags.environment=${SPRING_PROFILES_ACTIVE:default}

# Inventory Service Configuration
inventory.service.retry.max-attempts=3
inventory.service.retry.delay-ms=1000
inventory.service.reservation.timeout-seconds=30
