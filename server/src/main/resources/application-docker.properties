# Docker-specific configuration for TrackOps Server
spring.application.name=server

# Database Configuration (Docker networking)
spring.datasource.url=jdbc:postgresql://postgres:5432/trackops
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Redis Configuration (Docker networking)
spring.redis.host=redis
spring.redis.port=6379
spring.redis.timeout=5000ms
spring.redis.database=0
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.pool.max-wait=2000ms
spring.redis.lettuce.shutdown-timeout=200ms

# Kafka Configuration (Docker networking)
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=trackops-orders
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Health Check Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.redis.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=100MB
management.info.env.enabled=true
management.info.java.enabled=true
management.info.build.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=trackops-server
management.metrics.tags.environment=docker
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.sla.http.server.requests=10ms,50ms,100ms,200ms,500ms,1s,2s,5s

# Logging Configuration (Docker optimized)
logging.config=classpath:logback-spring.xml
logging.level.com.trackops.server=INFO
logging.level.org.springframework=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.springframework.kafka=WARN
logging.level.org.springframework.data=WARN
logging.level.org.hibernate=WARN
logging.level.org.apache.kafka=WARN
logging.level.io.lettuce=WARN
logging.level.com.zaxxer.hikari=WARN

# Log Path Configuration
LOG_PATH=/app/logs
APP_VERSION=1.0.0
