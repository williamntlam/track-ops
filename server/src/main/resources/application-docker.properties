# Docker Configuration for Server (Order Service)
spring.application.name=server

# Database Configuration - Server Database
spring.datasource.url=jdbc:postgresql://postgres-server:5432/trackops_orders
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Redis Configuration
spring.redis.host=redis
spring.redis.port=6379
spring.redis.timeout=2000ms
spring.redis.database=0

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=server-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Server Configuration
server.port=8081

# Health Check Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,cache
management.endpoint.health.show-details=always
management.endpoint.cache.enabled=true
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.redis.enabled=true